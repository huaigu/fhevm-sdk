/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  FHECounter,
  FHECounterInterface,
} from "../../contracts/FHECounter";

const _abi = [
  {
    inputs: [],
    name: "HandlesAlreadySavedForRequestID",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidKMSSignatures",
    type: "error",
  },
  {
    inputs: [],
    name: "NoHandleFoundForRequestID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "decryptedValue",
        type: "uint32",
      },
    ],
    name: "DecryptionCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestID",
        type: "uint256",
      },
    ],
    name: "DecryptionFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "requester",
        type: "address",
      },
    ],
    name: "DecryptionRequested",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "cleartexts",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "decryptionProof",
        type: "bytes",
      },
    ],
    name: "callbackDecryptCount",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "externalEuint32",
        name: "inputEuint32",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "decrement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCount",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "getDecryptedCount",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "getDecryptionRequester",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "externalEuint32",
        name: "inputEuint32",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "increment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "isDecryptionCompleted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "requestDecryptCount",
    outputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f5ffd5b5061018a6100ae604080516080810182525f808252602082018190529181018290526060810191909152506040805160808101825273687820221192c5b662b25367f70076a37bc79b6c815273848b0066793bcc60346da1f49049357399b8d595602082015273a02cda4ca3a71d7c46997716f4283aa851c2881291810191909152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac606082015290565b80517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970080546001600160a01b03199081166001600160a01b039384161790915560208301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497018054831691841691909117905560408301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497028054831691841691909117905560608301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497038054909216921691909117905550565b61116c806101975f395ff3fe608060405234801561000f575f5ffd5b506004361061009f575f3560e01c8063d4d992ef11610072578063e055f8f911610058578063e055f8f914610145578063f7a0634214610158578063fb1581d51461016b575f5ffd5b8063d4d992ef146100fd578063da1f12ab1461013d575f5ffd5b80631e88bb34146100a35780635941195d146100be57806392c07b63146100d3578063a87d942c146100f6575b5f5ffd5b6100ab6101a5565b6040519081526020015b60405180910390f35b6100d16100cc366004610da9565b6102d5565b005b6100e66100e1366004610ebf565b610342565b60405190151581526020016100b5565b5f546100ab565b61012561010b366004610f2c565b5f908152600260205260409020546001600160a01b031690565b6040516001600160a01b0390911681526020016100b5565b6127116100ab565b6100d1610153366004610da9565b610427565b6100e6610166366004610f2c565b610474565b610190610179366004610f2c565b5f9081526001602052604090205463ffffffff1690565b60405163ffffffff90911681526020016100b5565b6003545f9060ff16156101ff5760405162461bcd60e51b815260206004820152601960248201527f44656372797074696f6e20697320696e2070726f67726573730000000000000060448201526064015b60405180910390fd5b6040805160018082528183019092525f91602080830190803683370190505090506102285f5490565b815f8151811061023a5761023a610f43565b6020908102919091010152610256816392c07b6360e01b6104b0565b60048181556003805460ff191660011790555f9182526002602052604080832080547fffffffffffffffffffffffff0000000000000000000000000000000000000000163390811790915591549051919290917f0fd631f136845886c6a8df7897d4470f9519ee3afcdbeb05ed3855cdcbc6e2a99190a3505060045490565b5f6103158484848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506104bc92505050565b90506103225f54826104c9565b5f81905561032f906104f7565b5061033b5f5433610506565b5050505050565b5f60045484146103945760405162461bcd60e51b815260206004820152601160248201527f496e76616c69642072657175657374496400000000000000000000000000000060448201526064016101f6565b61039f848484610518565b5f838060200190518101906103b49190610f57565b5f86815260016020908152604091829020805463ffffffff191663ffffffff85169081179091556003805460ff19169055915191825291925086917f359c1ffb2037687397b066ecfed03e6f1ffd2b7e3a4147e0abef77e72e04e231910160405180910390a260019150505b9392505050565b5f6104678484848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506104bc92505050565b90506103225f5482610581565b5f8181526001602052604081205463ffffffff161515806104aa57505f828152600260205260409020546001600160a01b031615155b92915050565b5f61042083835f6105af565b5f610420838360046106dd565b5f826104db576104d85f6107fd565b92505b816104ec576104e95f6107fd565b91505b61042083835f61080f565b5f610502823061090a565b5090565b5f610511838361090a565b5090919050565b5f61052284610993565b90505f610530828585610a64565b9050806105505760405163cf6c44e960e01b815260040160405180910390fd5b60405185907f1af0453083661051f6e56e5c070792320652e612154bf9af8637bb1e7655b99d905f90a25050505050565b5f82610593576105905f6107fd565b92505b816105a4576105a15f6107fd565b91505b61042083835f610b50565b7f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf0080547f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497008054604051637d6e912360e11b81529293926001600160a01b039091169063fadd224690610625908990600401610fb4565b5f604051808303815f87803b15801561063c575f5ffd5b505af115801561064e573d5f5f3e3d5ffd5b5050506002820154604051633263b83b60e01b81526001600160a01b039091169150633263b83b90869061068a9087908b908b90600401610fc6565b5f604051808303818588803b1580156106a1575f5ffd5b505af11580156106b3573d5f5f3e3d5ffd5b50505050506106c28387610c05565b8154825f6106cf8361100b565b919050555050509392505050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163196d0b9b60e01b81525f917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b039091169063196d0b9b90610756908890339089908990600401611071565b6020604051808303815f875af1158015610772573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061079691906110b0565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec906044015f604051808303815f87803b1580156107df575f5ffd5b505af11580156107f1573d5f5f3e3d5ffd5b50505050509392505050565b5f6104aa8263ffffffff166004610c98565b5f5f82156108225750600160f81b610825565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163022f65e760e31b815260048101879052602481018690527fff00000000000000000000000000000000000000000000000000000000000000831660448201527f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b03169063117b2f38906064015b6020604051808303815f875af11580156108dc573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061090091906110b0565b9695505050505050565b5f7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497008054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b62906044015f604051808303815f87803b158015610978575f5ffd5b505af115801561098a573d5f5f3e3d5ffd5b50505050505050565b5f8181527f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf0160205260408120546060917f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf00919003610a045760405163d66ca67560e01b815260040160405180910390fd5b5f83815260018201602090815260409182902080548351818402810184019094528084529091830182828015610a5757602002820191905f5260205f20905b815481526020019060010190808311610a43575b5050505050915050919050565b5f5f83516020610a7491906110c7565b610a7f9060206110c7565b90505f8482604051602001610a959291906110da565b60405160208183030381529060405290505f610ace7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970090565b60038101546040516378542ead60e01b81529192506001600160a01b0316906378542ead90610b05908a9086908a906004016110f4565b6020604051808303815f875af1158015610b21573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b45919061112c565b979650505050505050565b5f5f8215610b635750600160f81b610b66565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649701546040516303056db360e31b815260048101879052602481018690527fff00000000000000000000000000000000000000000000000000000000000000831660448201527f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b03169063182b6d98906064016108c0565b5f8281527f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf0160205260409020547f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf009015610c7257604051633f06d22b60e01b815260040160405180910390fd5b5f83815260018201602090815260409091208351610c9292850190610d55565b50505050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970154604051639cd07acb60e01b81525f917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b0390911690639cd07acb90610d0d908790879060040161114b565b6020604051808303815f875af1158015610d29573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d4d91906110b0565b949350505050565b828054828255905f5260205f20908101928215610d8e579160200282015b82811115610d8e578251825591602001919060010190610d73565b506105029291505b80821115610502575f8155600101610d96565b5f5f5f60408486031215610dbb575f5ffd5b83359250602084013567ffffffffffffffff811115610dd8575f5ffd5b8401601f81018613610de8575f5ffd5b803567ffffffffffffffff811115610dfe575f5ffd5b866020828401011115610e0f575f5ffd5b939660209190910195509293505050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112610e43575f5ffd5b813567ffffffffffffffff811115610e5d57610e5d610e20565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715610e8c57610e8c610e20565b604052818152838201602001851015610ea3575f5ffd5b816020850160208301375f918101602001919091529392505050565b5f5f5f60608486031215610ed1575f5ffd5b83359250602084013567ffffffffffffffff811115610eee575f5ffd5b610efa86828701610e34565b925050604084013567ffffffffffffffff811115610f16575f5ffd5b610f2286828701610e34565b9150509250925092565b5f60208284031215610f3c575f5ffd5b5035919050565b634e487b7160e01b5f52603260045260245ffd5b5f60208284031215610f67575f5ffd5b815163ffffffff81168114610420575f5ffd5b5f8151808452602084019350602083015f5b82811015610faa578151865260209586019590910190600101610f8c565b5093949350505050565b602081525f6104206020830184610f7a565b838152606060208201525f610fde6060830185610f7a565b905063ffffffff60e01b83166040830152949350505050565b634e487b7160e01b5f52601160045260245ffd5b5f6001820161101c5761101c610ff7565b5060010190565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b6054811061106d57634e487b7160e01b5f52602160045260245ffd5b9052565b8481526001600160a01b0384166020820152608060408201525f6110986080830185611023565b90506110a76060830184611051565b95945050505050565b5f602082840312156110c0575f5ffd5b5051919050565b808201808211156104aa576104aa610ff7565b5f83518060208601845e9190910191825250602001919050565b606081525f6111066060830186610f7a565b82810360208401526111188186611023565b905082810360408401526109008185611023565b5f6020828403121561113c575f5ffd5b81518015158114610420575f5ffd5b82815260408101610420602083018461105156fea164736f6c634300081b000a";

type FHECounterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FHECounterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FHECounter__factory extends ContractFactory {
  constructor(...args: FHECounterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FHECounter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FHECounter__factory {
    return super.connect(runner) as FHECounter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FHECounterInterface {
    return new Interface(_abi) as FHECounterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): FHECounter {
    return new Contract(address, _abi, runner) as unknown as FHECounter;
  }
}
